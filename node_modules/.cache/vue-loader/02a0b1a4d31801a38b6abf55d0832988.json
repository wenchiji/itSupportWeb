{"remainingRequest":"D:\\develop\\ideaProjects\\itSupportWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\develop\\ideaProjects\\itSupportWeb\\src\\views\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\develop\\ideaProjects\\itSupportWeb\\src\\views\\User.vue","mtime":1616140457448},{"path":"D:\\develop\\ideaProjects\\itSupportWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\develop\\ideaProjects\\itSupportWeb\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\develop\\ideaProjects\\itSupportWeb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\develop\\ideaProjects\\itSupportWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\develop\\ideaProjects\\itSupportWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"User.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        查询：\r\n        <el-input @keyup.enter.native=\"findByName\" v-model=\"username\" style=\"width: 20%\" placeholder=\"请输入姓名\"></el-input>\r\n        &nbsp\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" @click=\"bathDeleteUser(selectionList)\"\r\n                   :disabled=\"this.selectionList.length === 0\">批量删除</el-button>\r\n        <el-button @click=\"handerEdit()\" type=\"success\" icon=\"el-icon-edit\">新增用户</el-button>\r\n        <br><br>\r\n        <el-table :data=\"tableData\" border style=\"width: 100%\" @selection-change=\"selectionChange\">\r\n            <el-table-column type=\"selection\" width=\"55\">\r\n            </el-table-column>\r\n            <el-table-column fixed type=\"index\" label=\"序号\" width=\"100\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"id\" label=\"ID\" width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"姓名\" width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"phone\" label=\"电话号码\" width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"password\" label=\"密码\" width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column fixed=\"right\" label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button @click=\"handerEdit(scope.$index,scope.row)\" size=\"small\">编辑</el-button>\r\n                    <el-button @click=\"deleteUser(scope.row)\" type=\"danger\" size=\"small\" icon=\"el-icon-delete\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-pagination\r\n                background\r\n                layout=\"prev, pager, next\"\r\n                :page-size= \"pageSize\"\r\n                :total=\"total\"\r\n                :current-page=\"currentPage\"\r\n                @current-change=\"pageChange\">\r\n        </el-pagination>\r\n        <!-- ’编辑‘弹框界面-->\r\n        <el-dialog :visible.sync=\"dialogFormVisible\" :close-on-click-modal=\"false\" style=\"width: 100%\" title=\"编辑用户信息\" >\r\n            <el-form :model=\"editForm\" ref=\"editForm\">\r\n                <el-form-item style=\"width: 80%\" label=\"用户编号\" prop=\"id\" >\r\n                    <el-input v-model=\"editForm.id\" ></el-input>\r\n                </el-form-item>\r\n                <el-form-item style=\"width: 80%\" label=\"用户姓名\">\r\n                    <el-input v-model=\"editForm.name\" ></el-input>\r\n                </el-form-item>\r\n                <el-form-item style=\"width: 80%\" label=\"电话\" prop=\"phone\" >\r\n                    <el-input v-model=\"editForm.phone\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item style=\"width: 80%\" label=\"密码\" prop=\"password\" >\r\n                    <el-input v-model=\"editForm.password\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                <el-button @click=\"resetForm('editForm')\">重置</el-button>\r\n                <el-button type=\"primary\" @click=\"addUser\">新 增</el-button>\r\n                <el-button type=\"primary\" @click=\"updateUser\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        inject: ['reload'], //依赖注入\r\n        methods: {\r\n            findByName(){\r\n                let str = this.username\r\n                axios.get(this.baseUrl+'/findByName?name='+str).then(response => {\r\n                    this.tableData = response.data\r\n                    this.total = response.data.totalElements\r\n                })\r\n            },\r\n            //批量选择时触发\r\n            selectionChange(val){\r\n                this.selectionList = val\r\n            },\r\n            addUser(){\r\n                let param = new URLSearchParams()\r\n                param.append('username', this.editForm.username)\r\n                param.append('phone', this.editForm.phone)\r\n                param.append('password', this.editForm.password)\r\n                axios.post(this.baseUrl+'/addUser/',param\r\n                ).then((response)=>{\r\n                    if(response.data.success == 'true'){\r\n                        this.$alert('用户 '+this.editForm.username+' 添加成功!','提示', {\r\n                            confirmButtonText: '确定',\r\n                            callback: action => {\r\n                                this.reload();\r\n                            }\r\n                        });\r\n                    }else {\r\n                        this.$alert('用户 '+this.editForm.username+' 添加失败!','提示', {\r\n                            confirmButtonText: '确定',\r\n                            callback: action => {\r\n                                this.reload();\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            },\r\n            updateUser() {\r\n                let para = Object.assign({},this.editForm);\r\n                axios.post(this.baseUrl+'/updateUser',para).then((response)=>{\r\n                    if(response.data == 'success'){\r\n                        this.$alert('用户 '+this.editForm.name+' 信息修改成功!','提示', {\r\n                            confirmButtonText: '确定',\r\n                            callback: action => {\r\n                                this.reload();\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n            },\r\n            bathDeleteUser () {\r\n                // 获取所有选中行的account组成的字符串，以逗号分隔\r\n                let accounts = this.selectionList.map(item => item.name).join()\r\n                let userIds = this.selectionList.map(item => item.id).join()\r\n                this.$confirm('永久删除 ' + accounts + ' 多个账号, 是否继续?', '警告', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    // 发送删除请求\r\n                    this.$axios.post(this.baseUrl+'/bathDeleteUser/?userIds='+userIds)\r\n                    this.$alert('删除成功!','提示', {\r\n                        confirmButtonText: '确定',\r\n                        callback: action => {\r\n                            this.reload();\r\n                        }\r\n                    });\r\n                }).catch((e) => {\r\n                    console.log(e.message);\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '已取消删除'\r\n                    });\r\n                });\r\n            },\r\n            deleteUser(row) {\r\n                this.$confirm('此操作将永久删除该用户, 是否继续?', '警告', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    this.$axios.delete(this.baseUrl+'/deleteUser?id='+row.id)\r\n                    this.$alert('删除成功!','提示', {\r\n                        confirmButtonText: '确定',\r\n                        callback: action => {\r\n                            this.reload();\r\n                        }\r\n                    });\r\n                }).catch((e) => {\r\n                    console.log(e.message);\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '已取消删除'\r\n                    });\r\n                });\r\n            },\r\n            findById(row){\r\n                let user = axios.get(this.baseUrl+'/findById?id='+row.id)\r\n            },\r\n            //显示编辑页面\r\n            handerEdit: function(index,row){\r\n                this.dialogFormVisible = true;\r\n                this.editForm = Object.assign({},row);\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            },\r\n            pageChange(currentPage){\r\n                const that = this\r\n                that.currentPage = currentPage;\r\n                that.getList(that);\r\n            },\r\n            getList(that){\r\n                axios.get(this.baseUrl+'/listAll/'+that.currentPage+'/10').then(function (response) {\r\n                    that.tableData = response.data.content\r\n                    that.total = response.data.totalElements\r\n                })\r\n            }\r\n        },\r\n        created() {\r\n            const this1 = this\r\n            this1.getList(this1)\r\n        },\r\n        data() {\r\n            return {\r\n                baseUrl: 'http://103.228.163.54:9001',\r\n                input:'',\r\n                username:'',\r\n                //批量删除选中id\r\n                selectionList:[],\r\n                pageSize: 10,\r\n                total: 0,\r\n                tableData: [],\r\n                currentPage: 1,\r\n                center:true,\r\n                dialogFormVisible: false,\r\n                form: {\r\n                    name: '',\r\n                    phone:'',\r\n                    password:''\r\n                },\r\n                formLabelWidth: '100px',\r\n                editForm: {\r\n                    id:'',\r\n                    name: '',\r\n                    phone: '',\r\n                    password: ''\r\n                },\r\n                rules: {\r\n                    phone: [\r\n                        { required: true, message: '请输入联系电话', trigger: 'blur' },\r\n                        { min: 3, max: 5, message: '长度为11个字符', trigger: 'blur' }\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: '请输入登陆密码', trigger: 'blur' },\r\n                        { min: 3, max: 5, message: '长度在 6 到 11 个字符', trigger: 'blur' }\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}